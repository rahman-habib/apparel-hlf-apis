{"kind":"code","props":{"deps":{"Jig":{"$jig":"native://Jig"}},"location":"_o1","nonce":1,"origin":"_o1","owner":"mwxi719WG6oL3vhyMNrX8xysSGAt4MaUBD","satoshis":0},"src":"class SupplyChain extends Jig {\r\n\r\n    init(){\r\n        this.Orders=[];\r\n        this.AnalysisAndDevelopment=[];\r\n        this.Processes=[];\r\n        this.CuttingProcess=[];\r\n        this.StitchingProcess=[];\r\n        this.QualityProcess=[];\r\n        this.PackingProcess=[];\r\n        this.RFID=[];\r\n        this.SupplyFlow=[];\r\n    }\r\n    createOrder(order){\r\n        try {\r\n            console.log(\"order: \",order)\r\n            this.Orders.push(order);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getOrderHistory(id){\r\n        try {\r\n            return this.Orders.filter((ord)=>ord.orderId==id);\r\n        \r\n        } catch (error) {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    getOrder(id){\r\n        try {\r\n            let data=this.Orders.filter((ord)=>ord.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdOrder(obj){\r\n        this.Orders[this.Orders.length-1]=obj;\r\n        return false;\r\n    } \r\n    createAnalysisAndDevelopment(order){\r\n        try {\r\n            console.log(\"Analysis and Development\")\r\n            this.AnalysisAndDevelopment.push(order)\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getAnalysisAndDevelopment(id){\r\n        try {\r\n            let data=this.AnalysisAndDevelopment.filter((ord)=>ord.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getAnalysisHistory(id){\r\n        try {\r\n            return this.AnalysisAndDevelopment.filter((ord)=>ord.orderId==id);\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdAnalysis(obj){\r\n        this.AnalysisAndDevelopment[this.AnalysisAndDevelopment.length-1]=obj;\r\n        return true;\r\n    }\r\n    createProcesses(process){\r\n        try {\r\n            console.log(\"Processes: \",process);\r\n            this.Processes.push(process);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getProcessesHistory(id){\r\n        try {\r\n            return this.Processes.filter((pro)=>pro.orderId==id);\r\n\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getProcesses(id){\r\n        try {\r\n            let data=this.Processes.filter((pro)=>pro.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdProcesses(obj){\r\n       try {\r\n        this.Processes[this.Processes.length-1]=obj;\r\n        return true\r\n       } catch (error) {\r\n        return false;\r\n       }\r\n    }\r\n    createCuttingProcess(cp){\r\n        try {\r\n            console.log(\"Cutting Process: \",cp);\r\n            this.CuttingProcess.push(cp);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    getCuttingProcessHistory(id){\r\n        try {\r\n            return this.CuttingProcess.filter((cp)=>cp.orderId==id);\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getCuttingProcess(id){\r\n        try {\r\n            let data=this.CuttingProcess.filter((cp)=>cp.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdCuttingProcess(obj){\r\n        try {\r\n            this.CuttingProcess[this.CuttingProcess.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    createStitchingProcess(sp){\r\n        try {\r\n            console.log('Stitching Process: ',sp);\r\n            this.StitchingProcess.push(sp);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getStitchingProcessHistory(id){\r\n        try {\r\n           return this.StitchingProcess.filter((sp)=>sp.orderId==id);\r\n\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getStitchingProcess(id){\r\n        try {\r\n            let data=this.StitchingProcess.filter((sp)=>sp.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdStitchingProcess(obj){\r\n        try {\r\n            this.StitchingProcess[this.StitchingProcess.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    createQualityProcess(qp){\r\n        try {\r\n            console.log(\"Quality Process: \",qp);\r\n            this.QualityProcess.push(qp);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getQualityProcessHistory(id){\r\n        try {\r\n            return this.QualityProcess.filter((qp)=>qp.orderId==id);\r\n\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getQualityProcess(id){\r\n        try {\r\n            let data=this.QualityProcess.filter((qp)=>qp.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdQualityProcess(obj){\r\n        try {\r\n            this.QualityProcess[this.QualityProcess.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    createPackingProcess(pp){\r\n        try {\r\n            console.log(\"Packing Process: \",pp);\r\n            this.PackingProcess.push(pp);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getPackingProcessHistory(id){\r\n        try {\r\n            return this.PackingProcess.filter((pp)=>pp.orderId==id);\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getPackingProcess(id){\r\n        try {\r\n            let data=this.PackingProcess.filter((pp)=>pp.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdPackingProcess(obj){\r\n        try {\r\n            this.PackingProcess[this.PackingProcess.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    createRfid(rd){\r\n        try {\r\n            console.log(\"RFID:\",rd);\r\n            this.RFID.push(rd);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getRfid(id){\r\n        try {\r\n            let data=this.RFID.filter((rd)=>rd.orderId==id);\r\n            data.reverse();\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getRfidHistory(id){\r\n        try {\r\n            return this.RFID.filter((rd)=>rd.orderId==id);\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendTxIdRfid(obj){\r\n        try {\r\n            this.RFID[this.RFID.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    createSupplyFlow(sf){\r\n        try {\r\n            console.log(\"supply Flow: \",sf);\r\n            this.SupplyFlow.push(sf);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getSupplyFlowHistory(id){\r\n        try {\r\n            return this.SupplyFlow.filter((sf)=>sf.orderId==id);\r\n\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    getSupplyFlow(id){\r\n        try {\r\n            let data=this.SupplyFlow.filter((sf)=>sf.orderId==id);\r\n            data.reverse()\r\n            return data[0];\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    appendSupplyFlow(obj){\r\n        try {\r\n            this.SupplyFlow[this.SupplyFlow.length-1]=obj;\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n  \r\n\r\n}","version":"04"}